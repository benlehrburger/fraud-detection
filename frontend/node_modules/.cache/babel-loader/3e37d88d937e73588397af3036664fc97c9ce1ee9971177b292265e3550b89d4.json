{"ast":null,"code":"var _jsxFileName = \"/Users/benlehrburger/Desktop/fintechco-fraud-detection/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Dashboard } from './components/Dashboard';\nimport { apiService, ApiError } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [state, setState] = useState({\n    transactions: [],\n    alerts: [],\n    statistics: {\n      total_transactions: 0,\n      fraud_rate: 0,\n      risk_distribution: {},\n      alerts_count: 0,\n      model_status: 'not_trained'\n    },\n    loading: false,\n    error: null,\n    connectionStatus: 'connected'\n  });\n  const [showDemoPanel, setShowDemoPanel] = useState(false);\n  const [pollingCleanup, setPollingCleanup] = useState(null);\n\n  // Update state helper\n  const updateState = useCallback(updates => {\n    setState(prev => ({\n      ...prev,\n      ...updates\n    }));\n  }, []);\n\n  // Error handler\n  const handleError = useCallback((error, context) => {\n    console.error(`Error in ${context}:`, error);\n    console.error('Error details:', {\n      name: error instanceof Error ? error.name : 'Unknown',\n      message: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined,\n      status: error instanceof ApiError ? error.status : undefined\n    });\n    let errorMessage = 'An unexpected error occurred';\n    if (error instanceof ApiError) {\n      errorMessage = `API Error: ${error.message}`;\n      if (error.status === 0) {\n        updateState({\n          connectionStatus: 'disconnected'\n        });\n        errorMessage = 'Unable to connect to fraud detection service';\n      }\n    } else if (error instanceof Error) {\n      errorMessage = error.message;\n    }\n    updateState({\n      error: errorMessage,\n      loading: false\n    });\n  }, [updateState]);\n\n  // Initialize application\n  const initializeApp = useCallback(async () => {\n    console.log('Starting app initialization...');\n    updateState({\n      loading: true,\n      error: null,\n      connectionStatus: 'connecting'\n    });\n    try {\n      // Test connection with service discovery\n      console.log('Discovering and testing connection to backend...');\n      const isConnected = await apiService.testConnection(5); // More retries for initial connection\n      console.log('Connection test result:', isConnected);\n      if (!isConnected) {\n        throw new Error('Cannot connect to fraud detection service. Please ensure the backend is running.');\n      }\n      console.log('Connection successful, updating state...');\n      updateState({\n        connectionStatus: 'connected'\n      });\n\n      // Load initial data in parallel\n      console.log('Loading initial data...');\n      const [transactionsResponse, alertsResponse, statisticsResponse] = await Promise.allSettled([apiService.fetchTransactions({\n        per_page: 100\n      }), apiService.fetchAlerts({\n        limit: 50\n      }), apiService.fetchStatistics()]);\n      console.log('API responses:', {\n        transactions: transactionsResponse.status,\n        alerts: alertsResponse.status,\n        statistics: statisticsResponse.status\n      });\n\n      // Process results\n      const transactions = transactionsResponse.status === 'fulfilled' ? transactionsResponse.value.transactions : [];\n      const alerts = alertsResponse.status === 'fulfilled' ? alertsResponse.value.alerts : [];\n      const statistics = statisticsResponse.status === 'fulfilled' ? statisticsResponse.value : null;\n      console.log('Processed data:', {\n        transactionCount: transactions.length,\n        alertCount: alerts.length,\n        hasStatistics: !!statistics\n      });\n      updateState({\n        transactions,\n        alerts,\n        statistics,\n        loading: false,\n        error: null\n      });\n      console.log('App initialization completed successfully!');\n\n      // Start real-time polling\n      const cleanup = apiService.startPolling(newTransactions => {\n        updateState({\n          transactions: newTransactions\n        });\n      }, 10000); // Poll every 10 seconds\n\n      setPollingCleanup(() => cleanup);\n    } catch (error) {\n      handleError(error, 'initialization');\n    }\n  }, [updateState, handleError]);\n\n  // Refresh data\n  const refreshData = useCallback(async () => {\n    try {\n      updateState({\n        loading: true,\n        error: null\n      });\n      const [transactionsResponse, alertsResponse, statisticsResponse] = await Promise.all([apiService.fetchTransactions({\n        per_page: 100\n      }), apiService.fetchAlerts({\n        limit: 50\n      }), apiService.fetchStatistics()]);\n      updateState({\n        transactions: transactionsResponse.transactions,\n        alerts: alertsResponse.alerts,\n        statistics: statisticsResponse,\n        loading: false\n      });\n    } catch (error) {\n      handleError(error, 'data refresh');\n    }\n  }, [updateState, handleError]);\n\n  // Submit demo transaction\n  const submitDemoTransaction = useCallback(async () => {\n    try {\n      const demoTransaction = apiService.generateDemoTransaction();\n      updateState({\n        loading: true,\n        error: null\n      });\n      const result = await apiService.analyzeTransaction(demoTransaction);\n\n      // Add to transactions list\n      updateState({\n        transactions: [result, ...state.transactions],\n        loading: false\n      });\n\n      // Refresh statistics\n      const newStats = await apiService.fetchStatistics();\n      updateState({\n        statistics: newStats\n      });\n    } catch (error) {\n      handleError(error, 'demo transaction submission');\n    }\n  }, [state.transactions, updateState, handleError]);\n\n  // Submit batch demo transactions\n  const submitBatchDemoTransactions = useCallback(async (count = 5) => {\n    try {\n      const demoTransactions = apiService.generateDemoTransactions(count);\n      updateState({\n        loading: true,\n        error: null\n      });\n      const result = await apiService.analyzeBatchTransactions(demoTransactions);\n\n      // Add successful transactions to list\n      const successfulTransactions = result.results.filter(r => !('error' in r));\n      updateState({\n        transactions: [...successfulTransactions, ...state.transactions],\n        loading: false\n      });\n\n      // Refresh statistics\n      const newStats = await apiService.fetchStatistics();\n      updateState({\n        statistics: newStats\n      });\n    } catch (error) {\n      handleError(error, 'batch demo transaction submission');\n    }\n  }, [state.transactions, updateState, handleError]);\n\n  // Train ML model\n  const trainModel = useCallback(async () => {\n    try {\n      updateState({\n        loading: true,\n        error: null\n      });\n      const result = await apiService.trainModel();\n      updateState({\n        loading: false\n      });\n\n      // Show success message\n      alert(`Model training completed: ${result.message}`);\n\n      // Refresh statistics to show updated model status\n      const newStats = await apiService.fetchStatistics();\n      updateState({\n        statistics: newStats\n      });\n    } catch (error) {\n      handleError(error, 'model training');\n    }\n  }, [updateState, handleError]);\n\n  // Load initial data on mount (optional - can be triggered by user)\n  useEffect(() => {\n    // Skip automatic initialization - let user trigger data loading\n    console.log('App loaded - ready for user interaction');\n  }, []);\n\n  // Connection status indicator\n  const ConnectionStatus = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `connection-status ${state.connectionStatus}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-indicator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"status-text\",\n      children: [state.connectionStatus === 'connected' && 'Connected', state.connectionStatus === 'connecting' && 'Connecting...', state.connectionStatus === 'disconnected' && 'Disconnected']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n\n  // Error display\n  const ErrorDisplay = () => state.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-banner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"error-retry\",\n        onClick: initializeApp,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 7\n  }, this) : null;\n\n  // Demo panel\n  const DemoPanel = () => showDemoPanel ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"demo-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Demo Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"demo-close\",\n        onClick: () => setShowDemoPanel(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"demo-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"demo-button\",\n        onClick: submitDemoTransaction,\n        disabled: state.loading,\n        children: \"Submit Demo Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"demo-button\",\n        onClick: () => submitBatchDemoTransactions(5),\n        disabled: state.loading,\n        children: \"Submit 5 Demo Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"demo-button\",\n        onClick: trainModel,\n        disabled: state.loading,\n        children: \"Train ML Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"demo-button secondary\",\n        onClick: refreshData,\n        disabled: state.loading,\n        children: \"Refresh Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 7\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"app-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title-icon\",\n              children: \"\\uD83D\\uDEE1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), \"FinTechCo Fraud Detection\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"app-subtitle\",\n            children: \"Real-time Transaction Monitoring & Risk Assessment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-right\",\n          children: [/*#__PURE__*/_jsxDEV(ConnectionStatus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"demo-toggle\",\n            onClick: () => setShowDemoPanel(!showDemoPanel),\n            title: \"Demo Controls\",\n            children: \"\\uD83E\\uDDEA Demo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"refresh-button\",\n            onClick: refreshData,\n            disabled: state.loading,\n            title: \"Refresh Data\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: /*#__PURE__*/_jsxDEV(Dashboard, {\n        transactions: state.transactions,\n        alerts: state.alerts,\n        statistics: state.statistics,\n        loading: state.loading,\n        onRefresh: refreshData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xA9 2024 FinTechCo. All rights reserved.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Fraud Detection System v2.0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-right\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"footer-stats\",\n            children: state.statistics && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [state.statistics.total_transactions.toLocaleString(), \" transactions monitored\", state.statistics.model_status === 'trained' && ' • ML Enhanced']\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RKje315OKBvW8eha4djq5rmcOVM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Dashboard","apiService","ApiError","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","state","setState","transactions","alerts","statistics","total_transactions","fraud_rate","risk_distribution","alerts_count","model_status","loading","error","connectionStatus","showDemoPanel","setShowDemoPanel","pollingCleanup","setPollingCleanup","updateState","updates","prev","handleError","context","console","name","Error","message","String","stack","undefined","status","errorMessage","initializeApp","log","isConnected","testConnection","transactionsResponse","alertsResponse","statisticsResponse","Promise","allSettled","fetchTransactions","per_page","fetchAlerts","limit","fetchStatistics","value","transactionCount","length","alertCount","hasStatistics","cleanup","startPolling","newTransactions","refreshData","all","submitDemoTransaction","demoTransaction","generateDemoTransaction","result","analyzeTransaction","newStats","submitBatchDemoTransactions","count","demoTransactions","generateDemoTransactions","analyzeBatchTransactions","successfulTransactions","results","filter","r","trainModel","alert","ConnectionStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ErrorDisplay","onClick","DemoPanel","disabled","title","onRefresh","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/benlehrburger/Desktop/fintechco-fraud-detection/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Dashboard } from './components/Dashboard';\nimport { apiService, Transaction, Alert, Statistics, ApiError } from './services/api';\nimport './App.css';\n\ninterface AppState {\n  transactions: Transaction[];\n  alerts: Alert[];\n  statistics: Statistics | null;\n  loading: boolean;\n  error: string | null;\n  connectionStatus: 'connected' | 'disconnected' | 'connecting';\n}\n\nconst App: React.FC = () => {\n  const [state, setState] = useState<AppState>({\n    transactions: [],\n    alerts: [],\n    statistics: {\n      total_transactions: 0,\n      fraud_rate: 0,\n      risk_distribution: {},\n      alerts_count: 0,\n      model_status: 'not_trained'\n    },\n    loading: false,\n    error: null,\n    connectionStatus: 'connected'\n  });\n\n  const [showDemoPanel, setShowDemoPanel] = useState(false);\n  const [pollingCleanup, setPollingCleanup] = useState<(() => void) | null>(null);\n\n  // Update state helper\n  const updateState = useCallback((updates: Partial<AppState>) => {\n    setState(prev => ({ ...prev, ...updates }));\n  }, []);\n\n  // Error handler\n  const handleError = useCallback((error: unknown, context: string) => {\n    console.error(`Error in ${context}:`, error);\n    console.error('Error details:', {\n      name: error instanceof Error ? error.name : 'Unknown',\n      message: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined,\n      status: error instanceof ApiError ? error.status : undefined\n    });\n    \n    let errorMessage = 'An unexpected error occurred';\n    \n    if (error instanceof ApiError) {\n      errorMessage = `API Error: ${error.message}`;\n      if (error.status === 0) {\n        updateState({ connectionStatus: 'disconnected' });\n        errorMessage = 'Unable to connect to fraud detection service';\n      }\n    } else if (error instanceof Error) {\n      errorMessage = error.message;\n    }\n    \n    updateState({ error: errorMessage, loading: false });\n  }, [updateState]);\n\n  // Initialize application\n  const initializeApp = useCallback(async () => {\n    console.log('Starting app initialization...');\n    updateState({ loading: true, error: null, connectionStatus: 'connecting' });\n    \n    try {\n      // Test connection with service discovery\n      console.log('Discovering and testing connection to backend...');\n      const isConnected = await apiService.testConnection(5); // More retries for initial connection\n      console.log('Connection test result:', isConnected);\n      \n      if (!isConnected) {\n        throw new Error('Cannot connect to fraud detection service. Please ensure the backend is running.');\n      }\n      \n      console.log('Connection successful, updating state...');\n      updateState({ connectionStatus: 'connected' });\n      \n      // Load initial data in parallel\n      console.log('Loading initial data...');\n      const [transactionsResponse, alertsResponse, statisticsResponse] = await Promise.allSettled([\n        apiService.fetchTransactions({ per_page: 100 }),\n        apiService.fetchAlerts({ limit: 50 }),\n        apiService.fetchStatistics()\n      ]);\n      \n      console.log('API responses:', {\n        transactions: transactionsResponse.status,\n        alerts: alertsResponse.status,\n        statistics: statisticsResponse.status\n      });\n      \n      // Process results\n      const transactions = transactionsResponse.status === 'fulfilled' \n        ? transactionsResponse.value.transactions \n        : [];\n        \n      const alerts = alertsResponse.status === 'fulfilled' \n        ? alertsResponse.value.alerts \n        : [];\n        \n      const statistics = statisticsResponse.status === 'fulfilled' \n        ? statisticsResponse.value \n        : null;\n      \n      console.log('Processed data:', { \n        transactionCount: transactions.length, \n        alertCount: alerts.length, \n        hasStatistics: !!statistics \n      });\n      \n      updateState({\n        transactions,\n        alerts,\n        statistics,\n        loading: false,\n        error: null\n      });\n      \n      console.log('App initialization completed successfully!');\n      \n      // Start real-time polling\n      const cleanup = apiService.startPolling((newTransactions) => {\n        updateState({ transactions: newTransactions });\n      }, 10000); // Poll every 10 seconds\n      \n      setPollingCleanup(() => cleanup);\n      \n    } catch (error) {\n      handleError(error, 'initialization');\n    }\n  }, [updateState, handleError]);\n\n  // Refresh data\n  const refreshData = useCallback(async () => {\n    try {\n      updateState({ loading: true, error: null });\n      \n      const [transactionsResponse, alertsResponse, statisticsResponse] = await Promise.all([\n        apiService.fetchTransactions({ per_page: 100 }),\n        apiService.fetchAlerts({ limit: 50 }),\n        apiService.fetchStatistics()\n      ]);\n      \n      updateState({\n        transactions: transactionsResponse.transactions,\n        alerts: alertsResponse.alerts,\n        statistics: statisticsResponse,\n        loading: false\n      });\n      \n    } catch (error) {\n      handleError(error, 'data refresh');\n    }\n  }, [updateState, handleError]);\n\n  // Submit demo transaction\n  const submitDemoTransaction = useCallback(async () => {\n    try {\n      const demoTransaction = apiService.generateDemoTransaction();\n      \n      updateState({ loading: true, error: null });\n      \n      const result = await apiService.analyzeTransaction(demoTransaction);\n      \n      // Add to transactions list\n      updateState({\n        transactions: [result, ...state.transactions],\n        loading: false\n      });\n      \n      // Refresh statistics\n      const newStats = await apiService.fetchStatistics();\n      updateState({ statistics: newStats });\n      \n    } catch (error) {\n      handleError(error, 'demo transaction submission');\n    }\n  }, [state.transactions, updateState, handleError]);\n\n  // Submit batch demo transactions\n  const submitBatchDemoTransactions = useCallback(async (count: number = 5) => {\n    try {\n      const demoTransactions = apiService.generateDemoTransactions(count);\n      \n      updateState({ loading: true, error: null });\n      \n      const result = await apiService.analyzeBatchTransactions(demoTransactions);\n      \n      // Add successful transactions to list\n      const successfulTransactions = result.results.filter(\n        (r): r is Transaction => !('error' in r)\n      );\n      \n      updateState({\n        transactions: [...successfulTransactions, ...state.transactions],\n        loading: false\n      });\n      \n      // Refresh statistics\n      const newStats = await apiService.fetchStatistics();\n      updateState({ statistics: newStats });\n      \n    } catch (error) {\n      handleError(error, 'batch demo transaction submission');\n    }\n  }, [state.transactions, updateState, handleError]);\n\n  // Train ML model\n  const trainModel = useCallback(async () => {\n    try {\n      updateState({ loading: true, error: null });\n      \n      const result = await apiService.trainModel();\n      \n      updateState({ loading: false });\n      \n      // Show success message\n      alert(`Model training completed: ${result.message}`);\n      \n      // Refresh statistics to show updated model status\n      const newStats = await apiService.fetchStatistics();\n      updateState({ statistics: newStats });\n      \n    } catch (error) {\n      handleError(error, 'model training');\n    }\n  }, [updateState, handleError]);\n\n  // Load initial data on mount (optional - can be triggered by user)\n  useEffect(() => {\n    // Skip automatic initialization - let user trigger data loading\n    console.log('App loaded - ready for user interaction');\n  }, []);\n\n  // Connection status indicator\n  const ConnectionStatus: React.FC = () => (\n    <div className={`connection-status ${state.connectionStatus}`}>\n      <div className=\"status-indicator\"></div>\n      <span className=\"status-text\">\n        {state.connectionStatus === 'connected' && 'Connected'}\n        {state.connectionStatus === 'connecting' && 'Connecting...'}\n        {state.connectionStatus === 'disconnected' && 'Disconnected'}\n      </span>\n    </div>\n  );\n\n  // Error display\n  const ErrorDisplay: React.FC = () => (\n    state.error ? (\n      <div className=\"error-banner\">\n        <div className=\"error-content\">\n          <span className=\"error-icon\">⚠️</span>\n          <span className=\"error-message\">{state.error}</span>\n          <button \n            className=\"error-retry\"\n            onClick={initializeApp}\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    ) : null\n  );\n\n  // Demo panel\n  const DemoPanel: React.FC = () => (\n    showDemoPanel ? (\n      <div className=\"demo-panel\">\n        <div className=\"demo-header\">\n          <h3>Demo Controls</h3>\n          <button \n            className=\"demo-close\"\n            onClick={() => setShowDemoPanel(false)}\n          >\n            ×\n          </button>\n        </div>\n        <div className=\"demo-actions\">\n          <button \n            className=\"demo-button\"\n            onClick={submitDemoTransaction}\n            disabled={state.loading}\n          >\n            Submit Demo Transaction\n          </button>\n          <button \n            className=\"demo-button\"\n            onClick={() => submitBatchDemoTransactions(5)}\n            disabled={state.loading}\n          >\n            Submit 5 Demo Transactions\n          </button>\n          <button \n            className=\"demo-button\"\n            onClick={trainModel}\n            disabled={state.loading}\n          >\n            Train ML Model\n          </button>\n          <button \n            className=\"demo-button secondary\"\n            onClick={refreshData}\n            disabled={state.loading}\n          >\n            Refresh Data\n          </button>\n        </div>\n      </div>\n    ) : null\n  );\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <div className=\"header-left\">\n            <h1 className=\"app-title\">\n              <span className=\"title-icon\">🛡️</span>\n              FinTechCo Fraud Detection\n            </h1>\n            <p className=\"app-subtitle\">Real-time Transaction Monitoring & Risk Assessment</p>\n          </div>\n          \n          <div className=\"header-right\">\n            <ConnectionStatus />\n            \n            <button \n              className=\"demo-toggle\"\n              onClick={() => setShowDemoPanel(!showDemoPanel)}\n              title=\"Demo Controls\"\n            >\n              🧪 Demo\n            </button>\n            \n            <button \n              className=\"refresh-button\"\n              onClick={refreshData}\n              disabled={state.loading}\n              title=\"Refresh Data\"\n            >\n              🔄\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <ErrorDisplay />\n      <DemoPanel />\n\n      <main className=\"app-main\">\n        <Dashboard \n          transactions={state.transactions}\n          alerts={state.alerts}\n          statistics={state.statistics}\n          loading={state.loading}\n          onRefresh={refreshData}\n        />\n      </main>\n\n      <footer className=\"app-footer\">\n        <div className=\"footer-content\">\n          <div className=\"footer-left\">\n            <p>&copy; 2024 FinTechCo. All rights reserved.</p>\n            <p>Fraud Detection System v2.0</p>\n          </div>\n          <div className=\"footer-right\">\n            <span className=\"footer-stats\">\n              {state.statistics && (\n                <>\n                  {state.statistics.total_transactions.toLocaleString()} transactions monitored\n                  {state.statistics.model_status === 'trained' && ' • ML Enhanced'}\n                </>\n              )}\n            </span>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}